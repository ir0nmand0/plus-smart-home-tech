@namespace("ru.yandex.practicum.kafka.telemetry.event")
protocol SensorAvroProtocol {

	/**
	 * Описание данных климатического сенсора.
	 * Включает температуру, влажность и уровень CO2.
	 */
	record ClimateSensorAvro {
		int temperature_c; // Температура в градусах Цельсия.
		int humidity; // Уровень влажности в процентах.
		int co2_level; // Уровень CO2 в частях на миллион (ppm).
	}

	/**
	 * Описание данных сенсора освещенности.
	 * Включает качество связи и уровень освещенности.
	 */
	record LightSensorAvro {
		int link_quality; // Индикатор качества сигнала.
		int luminosity; // Уровень освещенности.
	}

	/**
	 * Описание данных сенсора движения.
	 * Включает качество связи, обнаружение движения и уровень напряжения.
	 */
	record MotionSensorAvro {
		int link_quality; // Индикатор качества сигнала.
		boolean motion; // Обнаружено ли движение.
		int voltage; // Уровень напряжения в милливольтах.
	}

	/**
	 * Описание данных сенсора переключателя.
	 * Включает состояние переключателя.
	 */
	record SwitchSensorAvro {
		boolean state; // Текущее состояние переключателя (true - ВКЛ, false - ВЫКЛ).
	}

	/**
	 * Описание данных температурного сенсора.
	 * Включает температуру в градусах Цельсия и Фаренгейта.
	 */
	record TemperatureSensorAvro {
		int temperature_c; // Температура в градусах Цельсия.
		int temperature_f; // Температура в градусах Фаренгейта.
	}

	/**
	 * Телеметрическое событие для сенсоров.
	 * Содержит данные одного из сенсоров.
	 */
	record SensorEventAvro {
		string id; // Уникальный идентификатор сенсора.
		string hubId; // Хаб, к которому подключен сенсор.
		timestamp_ms timestamp; // Временная метка события.
		union {
			ClimateSensorAvro,
			LightSensorAvro,
			MotionSensorAvro,
			SwitchSensorAvro,
			TemperatureSensorAvro
		} payload; // Полезная нагрузка с данными сенсора.
	}
}
