name: Postman Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1) Клонировать репозиторий
      - name: Check out code
        uses: actions/checkout@v3

      # 2) Настройка JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: "21"
          cache: maven

      # 3) Собрать проект с помощью Maven (чтобы target/*.jar появились, тесты пропускаем)
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # 4) Собрать Docker-образы: каждый Dockerfile возьмет target/*.jar
      - name: Build Docker images
        run: docker compose -f compose.yaml build

      # 5) Запустить контейнеры
      - name: Start Docker containers
        run: docker compose -f compose.yaml up -d

      # 6) Ждём, пока Config Server станет UP (порт 8888, actuator/health)
      - name: Wait for Config Server
        run: |
          echo "Ожидание http://localhost:8888/actuator/health"
          for i in {1..10}; do
            if curl --silent --fail http://localhost:8888/actuator/health | grep -q "\"status\":\"UP\""; then
              echo "Config Server UP!"
              exit 0
            fi
            echo "Config Server пока не готов, спим 5с..."
            sleep 5
          done
          echo "Config Server не ответил за 10 попыток!"
          exit 1

      # 7) Ждем, пока Eureka (порт 8761) станет UP
      - name: Wait for Eureka
        run: |
          echo "Ожидание http://localhost:8761/actuator/health"
          for i in {1..10}; do
            if curl --silent --fail http://localhost:8761/actuator/health | grep -q "\"status\":\"UP\""; then
              echo "Eureka UP!"
              exit 0
            fi
            echo "Eureka пока не готов, спим 5с..."
            sleep 5
          done
          echo "Eureka не ответил за 10 попыток!"
          exit 1

      # 8) Ждем, пока Shopping Store (порт 8181) станет UP
      - name: Wait for Shopping Store
        run: |
          echo "Ожидание http://localhost:8181/actuator/health"
          for i in {1..10}; do
            if curl --silent --fail http://localhost:8181/actuator/health | grep -q "\"status\":\"UP\""; then
              echo "Shopping Store UP!"
              exit 0
            fi
            echo "Shopping Store пока не готов, спим 5с..."
            sleep 5
          done
          echo "Shopping Store не ответил за 10 попыток!"
          exit 1

      # 9) Ждем, пока Warehouse (порт 8182) станет UP
      - name: Wait for Warehouse
        run: |
          echo "Ожидание http://localhost:8182/actuator/health"
          for i in {1..10}; do
            if curl --silent --fail http://localhost:8182/actuator/health | grep -q "\"status\":\"UP\""; then
              echo "Warehouse UP!"
              exit 0
            fi
            echo "Warehouse пока не готов, спим 5с..."
            sleep 5
          done
          echo "Warehouse не ответил за 10 попыток!"
          exit 1

      # 10) Установка Node.js
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      # 11) Установка Newman (для запуска Postman-тестов)
      - name: Install Newman
        run: npm install -g newman

      # 12) Запуск Postman-тестов
      - name: Run Postman tests
        run: |
          newman run ./postman/commerce.json --reporters cli
          # Если нужно окружение, можно добавить:
          # newman run ./postman/commerce.json --environment ./postman/env.json --reporters cli

      # 13) Остановка контейнеров (выполняется всегда)
      - name: Stop Docker containers
        if: always()
        run: docker compose -f compose.yaml down
