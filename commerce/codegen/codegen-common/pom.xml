<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--
      Модуль, содержащий общие модели, конфигурации, иное.
      Собирается в JAR-библиотеку, которую используют другие модули.
    -->
    <parent>
        <groupId>ru.yandex.practicum</groupId>
        <artifactId>codegen</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>codegen-common</artifactId>
    <packaging>jar</packaging>

    <dependencies>
        <!-- Jackson для сериализации JSON -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <!-- Поддержка nullable-аннотаций -->
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
        </dependency>

        <!-- Jakarta Validation (Bean Validation) -->
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
        </dependency>

        <!-- Lombok (без генерации билдера) -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--
              Генерируем модели из common-schemas.json.
              Включаем валидацию, но убираем @Builder и генBuilders.
            -->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-common-models</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- Путь к спецификации, которая описывает общие схемы -->
                            <inputSpec>${project.parent.basedir}/specs/common-schemas.json</inputSpec>
                            <generatorName>spring</generatorName>
                            <output>${project.build.directory}/generated-sources/openapi</output>
                            <modelPackage>ru.yandex.practicum.common.model</modelPackage>

                            <configOptions>
                                <!-- Включаем Lombok (но без builder) -->
                                <useLombok>true</useLombok>

                                <!-- Прочие настройки -->
                                <useSpringBoot3>true</useSpringBoot3>
                                <useJakartaEe>true</useJakartaEe>
                                <generateModels>true</generateModels>
                                <generateApis>false</generateApis>
                                <dateLibrary>${openapi.generator.java.dateLibrary}</dateLibrary>
                                <sourceFolder>src/main/java</sourceFolder>
                                <library>spring-boot</library>
                                <serializationLibrary>jackson</serializationLibrary>

                                <!-- Важно для аннотаций валидации -->
                                <useBeanValidation>true</useBeanValidation>
                                <beanValidationModel>true</beanValidationModel>

                                <!-- Генерация конструктора с обязательными полями -->
                                <generateConstructorWithRequiredProperties>true</generateConstructorWithRequiredProperties>

                                <!-- Не используем Optional, чтобы поля были понятнее -->
                                <useOptional>false</useOptional>

                                <!-- Генерировать аннотацию @Generated для полей -->
                                <fieldGenerated>true</fieldGenerated>

                                <!-- Отключаем использование геттеров как аксессоров -->
                                <gettersAsAccessors>false</gettersAsAccessors>

                                <!-- Убираем упоминание билдеров -->
                                <!-- (Удалили additionalModelTypeAnnotations>@lombok.Builder</additionalModelTypeAnnotations>) -->
                            </configOptions>

                            <!-- Какие файлы генерировать -->
                            <globalProperties>
                                <modelTests>false</modelTests>
                                <apis>false</apis>
                                <models>true</models>
                                <supportingFiles>false</supportingFiles>
                            </globalProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Добавляем сгенерированный код в пути исходников -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/openapi/src/main/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Плагин компиляции -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <!-- Плагин упаковки в JAR -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
