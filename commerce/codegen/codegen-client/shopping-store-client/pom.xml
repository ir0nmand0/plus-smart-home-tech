<?xml version="1.0" encoding="UTF-8"?>
<!--
  Генерация Feign-клиента для Shopping Store на основе OpenAPI
  (spring-cloud library).
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://www.maven.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>ru.yandex.practicum</groupId>
        <artifactId>codegen-client</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>shopping-store-client</artifactId>
    <packaging>jar</packaging>

    <dependencies>
        <!-- Общий модуль с моделью и конфигурацией -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>codegen-common</artifactId>
        </dependency>

        <!-- OpenFeign для реализации HTTP-клиентов под Spring Boot -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>

        <!-- Spring Data (используем Pageable и т.д.) -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
        </dependency>

        <!-- Jakarta Validation -->
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
        </dependency>

        <!-- Swagger/OpenAPI аннотации -->
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--
              Генерируем клиента из спецификации shopping-store.json.
              Убираем билдеры, добавляем Bean Validation.
            -->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-shopping-store-client</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- Путь к спецификации Shopping Store -->
                            <inputSpec>${project.parent.parent.basedir}/specs/shopping-store.json</inputSpec>
                            <generatorName>spring</generatorName>
                            <apiPackage>ru.yandex.practicum.store.client</apiPackage>
                            <modelPackage>ru.yandex.practicum.common.model</modelPackage>

                            <configOptions>
                                <useSpringBoot3>true</useSpringBoot3>
                                <useJakartaEe>true</useJakartaEe>
                                <interfaceOnly>true</interfaceOnly>
                                <skipDefaultInterface>true</skipDefaultInterface>
                                <generateApis>true</generateApis>
                                <generateModels>true</generateModels>
                                <library>spring-cloud</library>

                                <!-- Подключаем валидацию во все модели -->
                                <useBeanValidation>true</useBeanValidation>
                                <beanValidationModel>true</beanValidationModel>

                                <!-- Убираем генерацию билдера (ранее было generateBuilders) -->
                                <!-- <generateBuilders>true</generateBuilders> УДАЛЕНО -->

                                <serializationLibrary>jackson</serializationLibrary>
                            </configOptions>

                            <!-- Привязка типов для Pageable -->
                            <typeMappings>
                                <typeMapping>Pageable=org.springframework.data.domain.Pageable</typeMapping>
                            </typeMappings>
                            <importMappings>
                                <importMapping>Pageable=org.springframework.data.domain.Pageable</importMapping>
                            </importMappings>

                            <addCompileSourceRoot>true</addCompileSourceRoot>
                            <generateSupportingFiles>false</generateSupportingFiles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Добавляем сгенерированный код в пути исходников -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/openapi</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
