server:
  port: 0  # Случайный свободный порт

spring:
  application:
    name: warehouse  # Имя сервиса для Config/Eureka Server
  config:
    import: "configserver:"  # Используем discovery-first подход
  cloud:
    config:
      discovery:
        enabled: true  # Включаем поиск Config Server через Eureka
        service-id: config-server  # Имя Config Server в Eureka
      fail-fast: true  # Если конфиг не загружен, приложение сразу падает
      retry:
        max-attempts: ${CONFIG_RETRY_ATTEMPTS:5}       # Кол-во попыток подключения
        initial-interval: ${CONFIG_RETRY_INITIAL:2000} # Пауза перед первой повторной попыткой
        max-interval: ${CONFIG_RETRY_MAX:10000}        # Максимальный интервал пауз

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka/}
    register-with-eureka: true  # Включаем регистрацию сервиса в Eureka
    fetch-registry: true        # Включаем получение реестра сервисов
  instance:
    prefer-ip-address: true     # Регистрировать сервис с IP-адресом
    lease-renewal-interval-in-seconds: 10  # Интервал обновления регистрации
    lease-expiration-duration-in-seconds: 30  # Таймаут недоступности сервиса